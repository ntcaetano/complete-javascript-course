//Aula 39

- Em um array o primeiro elemento da primeira posi√ß√£o √© representado como "0" e o seguinte "1" e assim por diante:

JS:

const friends = ['Michael', 'Steven', 'Peter'];
console.log(friends);

const years = new Array(1991, 1984, 2008, 2028);

console.log(friends[0]);

Console: Michael


- O "lenght" serve para abrager o numero total de elementos em um array:

JS:

const friends = ['Michael', 'Steven', 'Peter'];

console.log(friends.length);

Console: 3

//Aula 40

- A fun√ß√£o ".push" em um array serve para colocar um elemento no final dele.

- A fun√ß√£o ".unshift" em um array serve para colocar um elemento no come√ßo dele.

- A fun√ß√£o ".pop" em um array serve para remover o √∫ltimo elemento dentro dele.

- A fun√ß√£o ".shift" em um array serve para remover o primeiro elemento dentro dele.

//Aula 42:

- Existe uma forma mais vi√°vel de agrupar informa√ß√µes de um objeto do que em um Array. S√£o as Objetos com chaves que funcionam como um agrupamento de propriedades:

JS:

Array:

const jonasArray = [
  'Jonas',
  'Schmedtmann',
  2037 - 1991,
  'teacher',
  ['Michael', 'Peter', 'Steven']
];

Objeto com chaves:

const jonas = {
  firstName: 'Jonas',
  lastName: 'Schmedtmann',
  age: 2037 - 1991,
  job: 'teacher',
  friends: ['Michael', 'Peter', 'Steven']
};

* Dentro de um objeto com chaves diferente de um array, pode-se atribuir propriedades com valores. Logo pode-se chamar essas propriedades pela sintaxe.
 
//Aula 43

- No JS o nota√ß√£o com ponto n√£o consegue pegar o valor de uma propriedade se est√° declarada dentro do objeto, mas na nota√ß√£o com conchetes ele consegue pois por esse tipo de nota√ß√£o o valor √© avaliado:

JS nota√ß√£o normal:

const interestedIn = prompt('What do you want to know about Jonas? Choose between firstName, lastName, age, job, and friends');

  console.log(jonas.interestedIn)

reposta alert: job

resultado: undefined

JS nota√ß√£o por conchetes:

const interestedIn = prompt('What do you want to know about Jonas? Choose between firstName, lastName, age, job, and friends');

  console.log(jonas[interestedI])

resposta alert: job

resultado: teacher 

//Aula 47

- Para fazer um la√ßo for b√°sico em javascript utilizamos um numero fixo para definir o tamanho do la√ßo:

JS:

for (let rep = 1; rep <= 10; rep++){
  console.log(`Lifting weights repetition ${rep} üèãÔ∏è‚Äç‚ôÄÔ∏è`);
}

 
* Mas se vamos fazer um la√ßo para mostrar os todos elementos de um objeto utilizamos o 'lenght:

JS:

const jonas = [
  'Jonas',
  'Schmedtmann',
  2037 - 1991,
  'teacher',
  ['Michael', 'Peter', 'Steven'],
  true
];

for (let i = 0; i < jonas.length; i++) {
  console.log(jonas[i])
}


